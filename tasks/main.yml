---
# Install and configure OpenSSH server and client

- name: load platform-specific variables
  include_vars: all.yml

## Install ssh packages
- name: install ssh packages from backports
  apt: name={{ item }} state=latest default_release={{ ansible_distribution_release }}-backports update_cache=yes cache_valid_time=1800
  with_items: bpo_pkgs

- name: install ssh packages
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=1800
  with_items: pkgs


## Manage host configuration
- name: copy host configuration
  template: src=etc_ssh_sshd__config.j2 dest=/etc/ssh/sshd_config validate='sshd -T -f %s' owner=root group=root mode=0644
  notify:
    - restart ssh
  register: result

# Setting up the ssh-agent.service below with "local_action" requires the SSH server to have already been restarted.
- name: restart ssh
  service: name=ssh state=restarted
  when: result.changed

## Manage known_hosts
- name: create /etc/ssh/known_hosts
  file: path=/etc/ssh/known_hosts state=directory owner=root group=root mode=0755

- name: install system-wide known_hosts2
  template: src=known_hosts/known__hosts2.j2 dest=/etc/ssh/known_hosts/known_hosts2 owner=root group=root mode=0444

- stat: path=/etc/ssh/known_hosts/known_hosts
  register: known_hosts

- name: set permissions of system-wide known_hosts
  file: dest=/etc/ssh/known_hosts/known_hosts owner=root group=root mode=0644
  when: known_hosts.stat.exists

# TODO: manage per-user known_hosts files


## Manage authorized_keys
- name: create /etc/ssh/authorized_keys/
  file: path=/etc/ssh/authorized_keys state=directory owner=root group=root mode=0755

# TODO: Limit backup key with "force command"
- name: generate system-wide authorized_keys2
  template: src=authorized_keys/authorized__keys2.j2 dest=/etc/ssh/authorized_keys/authorized_keys2 owner=root group=root mode=0444

- stat: path=/etc/ssh/authorized_keys/authorized_keys
  register: authorized_keys

- name: set permissions of system-wide authorized_keys
  file: dest=/etc/ssh/authorized_keys/authorized_keys owner=root group=root mode=0644
  when: authorized_keys.stat.exists


- meta: flush_handlers
