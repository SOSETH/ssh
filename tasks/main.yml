---
# Install and configure OpenSSH server and client

- include_vars: "{{ ansible_distribution }}.yml"

## Install ssh packages
- name: install ssh packages
  become: True
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ pkgs }}"

## Manage host configuration
- name: copy host configuration
  become: True
  template:
    src: etc_ssh_sshd__config.j2
    dest: /etc/ssh/sshd_config
    validate: 'sshd -T -f %s'
    owner: root
    group: root
    mode: 0644
  notify:
    - restart ssh
  register: result

## Manage client configuration
- name: copy client configuration
  become: True
  template:
    src: etc_ssh_ssh__config.j2
    dest: /etc/ssh/ssh_config
    owner: root
    group: root
    mode: 0644

## Manage known_hosts
- name: create /etc/ssh/known_hosts
  become: True
  file:
    path: /etc/ssh/known_hosts
    state: directory
    owner: root
    group: root
    mode: 0755

- name: install system-wide known_hosts2
  become: True
  template:
    src: known_hosts/known__hosts2.j2
    dest: /etc/ssh/known_hosts/known_hosts2
    owner: root
    group: root
    mode: 0444

- stat:
    path: /etc/ssh/known_hosts/known_hosts
  register: known_hosts

- name: set permissions of system-wide known_hosts
  become: True
  file:
    dest: /etc/ssh/known_hosts/known_hosts
    owner: root
    group: root
    mode: 0644
  when: known_hosts.stat.exists

# TODO: manage per-user known_hosts files


## Manage authorized_keys
- name: add authorized keys
  become: True
  authorized_key:
    user: "root"
    key: "{{ lookup('file', ssh_user_key_loc + '/' + item + '.pub') }}"
  with_items: "{{ ssh_authorized_keys }}"
  
- name: add keeper
  become: True
  authorized_key:
    user: "root"
    key: "{{ ssh_keeper_key }}"
    key_options: 'no-pty,no-port-forwarding,no-user-rc,from="82.130.124.85,2001:67c:10ec:49c4::105",command="rsync --server --daemon --config=/etc/keeper-rsyncd.conf ."'
  when: ssh_keeper

- meta: flush_handlers
